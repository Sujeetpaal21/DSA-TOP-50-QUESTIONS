//Using stack 
vector <int> preorder(Node* root){
    
    vector<int> ans;
    
    stack<Node*>st;
    st.push(root);
    
    Node* cur=nullptr;
    while(!st.empty()){
        cur=st.top();
        st.pop();
        ans.push_back(cur->data);
        if(cur->right){
            st.push(cur->right);
        }
        if(cur->left){
            st.push(cur->left);
        }
        
    }
    return ans;
}




//using recursive method

void PreOrder(Node* root, vector<int>&ans){
    if(root==NULL){
        return;
    }
    ans.push_back(root->data);
    PreOrder(root->left,ans);
    PreOrder(root->right,ans);
}
//Function to return a list containing the preorder traversal of the tree.
vector <int> preorder(Node* root)
{
  vector<int>vect;
  PreOrder(root,vect);

  return vect;
}
